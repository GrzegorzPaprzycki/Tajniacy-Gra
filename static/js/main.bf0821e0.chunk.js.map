{"version":3,"sources":["words.txt","components/Input.js","pages/HomePage.js","pages/Page02.js","pages/ErrorPage.js","components/Card.js","pages/ChefPage.js","components/Message.js","pages/GuessPage.js","layouts/Page.js","Headers/ChefPageHeader.js","Headers/GuessPageHeader.js","Headers/StandardHeader.js","layouts/Header.js","layouts/App.js","index.js"],"names":["module","exports","Input","props","id","numbers","changeNumber","type","min","max","value","onChange","HomePage","this","fetchData","initializeState","drawClick","numberHolders","map","input","key","className","onClick","to","exact","Component","Page02","handleClick","e","changeRole","target","role","name","ErrorPage","Card","activeStyle","backgroundColor","fontWeight","letterSpacing","checkedStyle","color","gameEndedStyle","answerShownStyle","opacity","text","active","checked","answerShown","activeCard","gameEnded","style","ChefPage","startingColor","cards","card","Message","winner","click","GuessPage","state","frameColor","handleFinishTurn","setState","removeActive","handleTurnCard","findIndex","turnCard","selectedCard","setTimeout","endGame","blueChecked","redChecked","handleShowAnswer","Page","path","render","component","ChefPageHeader","GuessPageHeader","StandardHeader","Header","App","sumNumbers","colors","handleChangeRole","handleChangeNumber","handleDrawClick","i","length","push","multiplicator","forEach","multiplicator2","words","splice","handleActiveCard","index","handleEndGame","fetch","cardWords","then","res","split","result","catch","err","console","log","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf0821e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/words.e720cac3.txt\";","import React from 'react';\r\n\r\nconst Input = (props) => {\r\n    const { id, numbers, changeNumber } = props;\r\n    return (\r\n        <input type=\"number\" min=\"1\" max=\"9\" id={id} value={numbers[id]} onChange={changeNumber}  ></input>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport '../styles/HomePage.css';\r\nimport Input from '../components/Input';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass HomePage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchData();\r\n        this.props.initializeState();\r\n    }\r\n\r\n    render() {\r\n        const { numbers, drawClick, changeNumber } = this.props;\r\n        const inputs = [0, 1, 2, 3];\r\n        const numberHolders = inputs.map(input => <Input key={input} id={input} numbers={numbers} changeNumber={changeNumber} />)\r\n        return (\r\n            <div className=\"home\" >\r\n                <h2>Podaj kod gry (4 dowolne cyfry)</h2>\r\n                <form className=\"codeForm\">\r\n                    {numberHolders}\r\n                    <button onClick={drawClick} className=\"main\" ><NavLink to=\"/page02\" exact >DALEJ</NavLink></button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport '../styles/Page02.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Page02 extends Component {\r\n\r\n    handleClick = (e) => {\r\n        this.props.changeRole(e.target.id);\r\n    }\r\n\r\n    render() {\r\n        const { role } = this.props;\r\n        return (\r\n            <div className=\"page02\">\r\n                <h2>Po której stronie chcesz grać?</h2>\r\n                <div className=\"chooseSide\">\r\n                    <button id=\"/szefowie\" name=\"firstButtonClass\" className={role === \"/szefowie\" ? \"active\" : null} onClick={this.handleClick} >Szefowie</button>\r\n                    <button id=\"/zgadujacy\" name=\"secondButtonClass\" className={role === \"/zgadujacy\" ? \"active\" : null} onClick={this.handleClick} >Zgadywacze</button>\r\n                </div>\r\n                <button className=\"main\" ><NavLink to={role} exact >GRAJ</NavLink></button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page02;\r\n","import React from 'react';\r\nimport '../styles/ErrorPage.css';\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <div className=\"errorPage\" >\r\n            Nieprawidłowa ścieżka. Upewnij się, że adres jest poprawny.\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from 'react';\r\n\r\n\r\nclass Card extends Component {\r\n\r\n    activeStyle = {\r\n        backgroundColor: 'yellow',\r\n        fontWeight: 'bold',\r\n        letterSpacing: \"normal\",\r\n\r\n    }\r\n\r\n    checkedStyle = {\r\n        backgroundColor: this.props.color\r\n    }\r\n\r\n    gameEndedStyle = {\r\n        letterSpacing: \"normal\",\r\n    }\r\n\r\n    answerShownStyle = {\r\n        backgroundColor: this.props.color,\r\n        opacity: \"35%\",\r\n        letterSpacing: \"normal\",\r\n    }\r\n\r\n    render() {\r\n        const { role, color, id, text, active, checked, answerShown, activeCard, gameEnded } = this.props;\r\n        if (role === \"/szefowie\") {\r\n            return (\r\n                <div style={{ backgroundColor: `${color}` }} id={id}>{text}</div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={active ? this.activeStyle : checked ? this.checkedStyle : !gameEnded ? null : answerShown ? this.answerShownStyle : this.gameEndedStyle} id={id} onClick={() => activeCard(this.props.id)} >{text}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../components/Card';\r\nimport '../styles/ChefPage.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst ChefPage = (props) => {\r\n    const { startingColor, role } = props;\r\n    let cards = props.cards.map(card => <Card id={card.id} key={card.id} text={card.text} color={card.color} role={role} />)\r\n    return (\r\n        <>\r\n            <button className=\"newGame\"><NavLink to=\"/\" exact >Nowa gra</NavLink></button>\r\n            <div style={{ backgroundColor: `${startingColor}` }} className=\"chefPage\" >\r\n                <section className=\"cards\">\r\n                    {cards}\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ChefPage;\r\n","import React from 'react';\r\nimport '../styles/Message.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Message = (props) => {\r\n    const { gameEnded, winner, click } = props;\r\n    return (\r\n        <div className=\"message\">\r\n            <button className={gameEnded ? \"newGame gameEnded\" : \"newGame\"}><NavLink to=\"/\" exact >Nowa gra</NavLink></button>\r\n            <h2 className={gameEnded ? \"gameEnded\" : null} >{winner === \"blue\" ? \"zwyciężył niebieski\" : winner === \"red\" ? \"zwyciężył czerwony\" : \"GAME OVER\"}</h2>\r\n            <button onClick={click} className={gameEnded ? \"showAnswer answerShown\" : \"showAnswer\"}>Pokaż rozwiązanie</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { Component } from 'react';\r\nimport Card from '../components/Card';\r\nimport '../styles/GuessPage.css';\r\nimport Message from '../components/Message';\r\n\r\n\r\nclass GuessPage extends Component {\r\n    state = {\r\n        frameColor: this.props.startingColor,\r\n        winner: \"...\",\r\n        answerShown: false,\r\n    }\r\n\r\n    handleFinishTurn = () => {\r\n        if (!this.props.gameEnded) {\r\n            let frameColor = \"\";\r\n            if (this.state.frameColor === \"blue\") {\r\n                frameColor = \"red\"\r\n            } else {\r\n                frameColor = \"blue\"\r\n            }\r\n            this.setState({ frameColor })\r\n\r\n            this.props.removeActive();\r\n        }\r\n    }\r\n\r\n    handleTurnCard = () => {\r\n        if (!this.props.gameEnded) {\r\n            const cards = [...this.props.cards];\r\n            const index = cards.findIndex(card => card.active);\r\n            if (index >= 0) {\r\n                this.props.turnCard();\r\n                if (cards[this.props.selectedCard].color === \"#292c24\") {\r\n                    if (this.state.frameColor === \"blue\") {\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                winner: \"red\",\r\n                            })\r\n                        }, 500);\r\n                        this.props.endGame();\r\n                    } else {\r\n                        setTimeout(() => {\r\n                            this.setState({\r\n                                winner: \"blue\",\r\n                            })\r\n                        }, 500);\r\n                        this.props.endGame();\r\n                    }\r\n                }\r\n                else if (this.props.blueChecked === 7 && cards[this.props.selectedCard].color === \"blue\") {\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            winner: \"blue\",\r\n                        })\r\n                    }, 500);\r\n                    this.props.endGame();\r\n                }\r\n                else if (this.props.redChecked === 7 && cards[this.props.selectedCard].color === \"red\") {\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            winner: \"red\",\r\n                        })\r\n                    }, 500);\r\n                    this.props.endGame();\r\n                }\r\n                else if (cards[this.props.selectedCard].color !== this.state.frameColor && cards[this.props.selectedCard].color !== \"#292c24\") {\r\n                    this.handleFinishTurn()\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    handleShowAnswer = () => {\r\n        this.setState({\r\n            answerShown: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { role, gameEnded, activeCard } = this.props;\r\n        const { answerShown, winner, frameColor } = this.state;\r\n        let cards = this.props.cards.map(card => <Card id={card.id} key={card.id} text={card.text} color={card.color} active={card.active} checked={card.checked} role={role} gameEnded={gameEnded} activeCard={activeCard} answerShown={answerShown} />)\r\n        return (\r\n            <>\r\n                <Message\r\n                    winner={winner}\r\n                    gameEnded={gameEnded}\r\n                    click={this.handleShowAnswer}\r\n                />\r\n                <div className=\"guessPage\" style={{ backgroundColor: `${frameColor}` }}>\r\n                    <button className={gameEnded ? \"finishTurn gameEnded\" : \"finishTurn\"} onClick={this.handleFinishTurn} >Zakończ turę</button>\r\n                    <button className={gameEnded ? \"turnCard gameEnded\" : \"turnCard\"} onClick={this.handleTurnCard} >Odkryj kartę</button>\r\n                    <section className=\"cards\">\r\n                        {cards}\r\n                    </section>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GuessPage;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport HomePage from '../pages/HomePage';\r\nimport Page02 from '../pages/Page02';\r\nimport ErrorPage from '../pages/ErrorPage';\r\nimport ChefPage from '../pages/ChefPage';\r\nimport GuessPage from '../pages/GuessPage';\r\n\r\nconst Page = (props) => {\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path=\"/\" exact render={() => <HomePage numbers={props.numbers} changeNumber={props.changeNumber} drawClick={props.drawClick} fetchData={props.fetchData} initializeState={props.initializeState} />} />\r\n                <Route path=\"/page02\" render={() => <Page02 role={props.role} changeRole={props.changeRole} />} />\r\n                <Route path=\"/szefowie\" render={() => <ChefPage startingColor={props.startingColor} role={props.role} cards={props.cards} />} />\r\n                <Route path=\"/zgadujacy\" render={() => <GuessPage startingColor={props.startingColor} role={props.role} cards={props.cards} activeCard={props.activeCard} selectedCard={props.selectedCard} gameEnded={props.gameEnded} endGame={props.endGame} blueChecked={props.blueChecked} redChecked={props.redChecked} removeActive={props.removeActive} turnCard={props.turnCard} />} />\r\n                <Route component={ErrorPage} />\r\n            </Switch>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\n\r\nconst ChefPageHeader = () => {\r\n    return (\r\n        <h1>Szefowie</h1>\r\n    );\r\n}\r\n\r\nexport default ChefPageHeader;","import React from 'react';\r\n\r\nconst GuessPageHeader = (props) => {\r\n    return (\r\n        <h1 className={props.gameEnded ? \"guessPageHeader gameEnded\" : \"guessPageHeader\"}>Zgadywacze</h1>\r\n    );\r\n}\r\n\r\nexport default GuessPageHeader;","import React from 'react';\r\n\r\nconst StandardHeader = () => {\r\n    return (\r\n        <h1>Tajniacy</h1>\r\n    );\r\n}\r\n\r\nexport default StandardHeader;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ChefPageHeader from '../Headers/ChefPageHeader';\r\nimport GuessPageHeader from '../Headers/GuessPageHeader';\r\nimport StandardHeader from '../Headers/StandardHeader';\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/szefowie\" exact render={() => <ChefPageHeader />} />\r\n            <Route path=\"/zgadujacy\" exact render={() => <GuessPageHeader gameEnded={props.gameEnded} />} />\r\n            <Route path=\"/\" component={StandardHeader} />\r\n            <Route component={StandardHeader} />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Page from './Page';\nimport Header from './Header';\nimport cardWords from '../words.txt';\n\nclass App extends Component {\n  state = {\n    numbers: [1, 1, 1, 1],\n    sumNumbers: 0,\n    startingColor: \"\",\n    colors: [\"#292c24\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\"],\n    role: \"/szefowie\",\n    cards: [\n      { id: 0, text: \"Melon\", color: \"blue\", active: false, checked: false },\n      { id: 1, text: \"Lampa\", color: \"red\", active: false, checked: false },\n      { id: 2, text: \"Koc\", color: \"white\", active: false, checked: false },\n      { id: 3, text: \"Samolot\", color: \"red\", active: false, checked: false },\n      { id: 4, text: \"Chiny\", color: \"white\", active: false, checked: false },\n      { id: 5, text: \"Mieszkanie\", color: \"blue\", active: false, checked: false },\n      { id: 6, text: \"Klawiatura\", color: \"white\", active: false, checked: false },\n      { id: 7, text: \"Ronaldo\", color: \"#292c24\", active: false, checked: false },\n      { id: 8, text: \"Bajka\", color: \"blue\", active: false, checked: false },\n      { id: 9, text: \"Smok\", color: \"red\", active: false, checked: false },\n      { id: 10, text: \"Chleb\", color: \"red\", active: false, checked: false },\n      { id: 11, text: \"Kapeć\", color: \"red\", active: false, checked: false },\n      { id: 12, text: \"Opona\", color: \"blue\", active: false, checked: false },\n      { id: 13, text: \"Małpa\", color: \"white\", active: false, checked: false },\n      { id: 14, text: \"Czapka\", color: \"blue\", active: false, checked: false },\n      { id: 15, text: \"Oddech\", color: \"blue\", active: false, checked: false },\n      { id: 16, text: \"Gips\", color: \"blue\", active: false, checked: false },\n      { id: 17, text: \"Autostrada\", color: \"red\", active: false, checked: false },\n      { id: 18, text: \"Zapach\", color: \"white\", active: false, checked: false },\n      { id: 19, text: \"Skóra\", color: \"red\", active: false, checked: false },\n      { id: 20, text: \"Batuta\", color: \"red\", active: false, checked: false },\n      { id: 21, text: \"Wzrok\", color: \"blue\", active: false, checked: false },\n      { id: 22, text: \"Skarpeta\", color: \"white\", active: false, checked: false },\n      { id: 23, text: \"Plaża\", color: \"blue\", active: false, checked: false },\n      { id: 24, text: \"Księżyc\", color: \"white\", active: false, checked: false },\n    ],\n    selectedCard: -1,\n    gameEnded: false,\n    redChecked: 0,\n    blueChecked: 0,\n  }\n\n  handleChangeRole = id => {\n    this.setState({\n      role: id,\n    })\n  }\n\n  handleChangeNumber = e => {\n    const numbers = this.state.numbers;\n    numbers[e.target.id] = e.target.value;\n    this.setState({\n      numbers\n    })\n  }\n\n  handleDrawClick = () => {\n    const { numbers } = this.state;\n    // Sum of given numbers\n    let sumNumbers = 0;\n    for (let i = 0; i < numbers.length; i++) {\n      sumNumbers = sumNumbers + numbers[i] * 1\n    }\n    // Choosing starting color\n    let startingColor = \"\";\n    if (sumNumbers % 2 === 0) startingColor = \"blue\";\n    else startingColor = \"red\";\n    // Adding starting color to colors array\n    let colors = [...this.state.colors];\n    colors.push(startingColor);\n    // Choosing card text and color\n    const multiplicator = (numbers[0] * 1000 + numbers[1] * 100 + numbers[2] * 10 + numbers[3]);\n    let cards = [...this.state.cards];\n    cards.forEach(card => {\n      const multiplicator2 = (multiplicator + card.id) * (card.id + 1);\n      card.text = this.words[multiplicator2 % this.words.length];\n      card.color = colors[multiplicator2 % colors.length];\n      this.words.splice(multiplicator2 % this.words.length, 1);\n      colors.splice(multiplicator2 % colors.length, 1);\n    })\n    // Decreasing counter of starting color by 1\n    if (startingColor === \"blue\") {\n      this.setState({ blueChecked: this.state.blueChecked - 1 })\n    }\n    if (startingColor === \"red\") {\n      this.setState({ redChecked: this.state.redChecked - 1 })\n    }\n    // setState\n    this.setState({ cards, sumNumbers, startingColor })\n  }\n\n  handleActiveCard = id => {\n    if (!this.state.gameEnded) {\n      const cards = [...this.state.cards];\n      const selectedCard = cards.findIndex(card => card.id === id);\n      if (!cards[selectedCard].checked) {\n        cards.forEach(card => card.active = false);\n        cards[selectedCard].active = true;\n        this.setState({ cards, selectedCard });\n      }\n    }\n  }\n\n  removeActive = () => {\n    const cards = [...this.state.cards];\n    cards.forEach(card => card.active = false);\n    this.setState({ cards })\n  }\n\n  handleTurnCard = () => {\n    const cards = [...this.state.cards];\n    const index = cards.findIndex(card => card.active);\n    if (index >= 0) {\n      if (cards[index].color === \"blue\") {\n        this.setState({\n          blueChecked: this.state.blueChecked + 1,\n        })\n      }\n      if (cards[index].color === \"red\") {\n        this.setState({\n          redChecked: this.state.redChecked + 1,\n        })\n      }\n      cards[index].text = \"\";\n      cards[index].active = false;\n      cards[index].checked = true;\n      this.setState({ cards })\n    }\n  }\n\n  handleEndGame = () => {\n    this.setState({\n      gameEnded: true,\n    })\n  }\n\n  fetchData = () => {\n    return fetch(cardWords)\n      .then(res => res.text().then(text => text.split(/\\n/)))\n      .then(result => {\n        this.words = result\n      })\n      .catch(err => console.log(err))\n  }\n\n  initializeState = () => {\n    this.setState({\n      numbers: [1, 1, 1, 1],\n      sumNumbers: 0,\n      startingColor: \"\",\n      colors: [\"#292c24\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"red\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\", \"blue\"],\n      role: \"/szefowie\",\n      cards: [\n        { id: 0, text: \"Melon\", color: \"blue\", active: false, checked: false },\n        { id: 1, text: \"Lampa\", color: \"red\", active: false, checked: false },\n        { id: 2, text: \"Koc\", color: \"white\", active: false, checked: false },\n        { id: 3, text: \"Samolot\", color: \"red\", active: false, checked: false },\n        { id: 4, text: \"Chiny\", color: \"white\", active: false, checked: false },\n        { id: 5, text: \"Mieszkanie\", color: \"blue\", active: false, checked: false },\n        { id: 6, text: \"Klawiatura\", color: \"white\", active: false, checked: false },\n        { id: 7, text: \"Ronaldo\", color: \"#292c24\", active: false, checked: false },\n        { id: 8, text: \"Bajka\", color: \"blue\", active: false, checked: false },\n        { id: 9, text: \"Smok\", color: \"red\", active: false, checked: false },\n        { id: 10, text: \"Chleb\", color: \"red\", active: false, checked: false },\n        { id: 11, text: \"Kapeć\", color: \"red\", active: false, checked: false },\n        { id: 12, text: \"Opona\", color: \"blue\", active: false, checked: false },\n        { id: 13, text: \"Małpa\", color: \"white\", active: false, checked: false },\n        { id: 14, text: \"Czapka\", color: \"blue\", active: false, checked: false },\n        { id: 15, text: \"Oddech\", color: \"blue\", active: false, checked: false },\n        { id: 16, text: \"Gips\", color: \"blue\", active: false, checked: false },\n        { id: 17, text: \"Autostrada\", color: \"red\", active: false, checked: false },\n        { id: 18, text: \"Zapach\", color: \"white\", active: false, checked: false },\n        { id: 19, text: \"Skóra\", color: \"red\", active: false, checked: false },\n        { id: 20, text: \"Batuta\", color: \"red\", active: false, checked: false },\n        { id: 21, text: \"Wzrok\", color: \"blue\", active: false, checked: false },\n        { id: 22, text: \"Skarpeta\", color: \"white\", active: false, checked: false },\n        { id: 23, text: \"Plaża\", color: \"blue\", active: false, checked: false },\n        { id: 24, text: \"Księżyc\", color: \"white\", active: false, checked: false },\n      ],\n      selectedCard: -1,\n      gameEnded: false,\n      redChecked: 0,\n      blueChecked: 0,\n    })\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL} >\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {<Header\n              gameEnded={this.state.gameEnded}\n            />}\n          </header>\n          <main>\n            <section className=\"page\">\n              {<Page\n                numbers={this.state.numbers}\n                startingColor={this.state.startingColor}\n                role={this.state.role}\n                cards={this.state.cards}\n                selectedCard={this.state.selectedCard}\n                gameEnded={this.state.gameEnded}\n                blueChecked={this.state.blueChecked}\n                redChecked={this.state.redChecked}\n                changeNumber={this.handleChangeNumber}\n                changeRole={this.handleChangeRole}\n                drawClick={this.handleDrawClick}\n                activeCard={this.handleActiveCard}\n                removeActive={this.removeActive}\n                turnCard={this.handleTurnCard}\n                endGame={this.handleEndGame}\n                fetchData={this.fetchData}\n                initializeState={this.initializeState}\n              />}\n            </section>\n          </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './layouts/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}